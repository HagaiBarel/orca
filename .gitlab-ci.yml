stages:
  - build_image
  - tag_image
  - tag_image_latest

.image: &image
  except: [tags]
  image: docker:stable
  services:
  - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375

build_image_candidate:
  stage: build_image
  <<: *image
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build $DOCKER_OPTS -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID .
  - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID

.tag_image: &tag_image
  <<: *image
  when: manual
  before_script:
  - apk add --no-cache git
  - git checkout $CI_BUILD_REF_NAME
  - git pull --tags
  - export IMAGE_TAG=$(git describe --exact-match --tags $CI_COMMIT_SHA)
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY

tag_image:
  stage: tag_image
  <<: *tag_image
  script:
  - docker pull $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  - docker tag $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID $CI_REGISTRY_IMAGE:$IMAGE_TAG
  - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

tag_image_latest:
  stage: tag_image_latest
  <<: *tag_image
  script:
  - docker pull $CI_REGISTRY_IMAGE:$IMAGE_TAG
  - docker tag $CI_REGISTRY_IMAGE:$IMAGE_TAG $CI_REGISTRY_IMAGE:latest
  - docker push $CI_REGISTRY_IMAGE:latest
