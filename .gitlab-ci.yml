stages:
  - build_code
  - build_image

build_code:
  image: golang:1.10.3-alpine
  stage: build_code
  before_script:
  - apk add --no-cache git
  - go get -u github.com/golang/dep/cmd/dep 
  - export GOPATH=$(dirname $CI_PROJECT_DIR)/go
  - mkdir -p $GOPATH/src
  - cd $GOPATH/src
  - ln -s $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME
  - dep ensure -update
  script:
  - go build
  artifacts:
    paths: [orca]
    expire_in: 1 hrs

.build_image: &build_image
  image: docker:stable
  services:
  - docker:dind
  stage: build_image
  dependencies: [build_code]
  variables:
    DOCKER_HOST: tcp://localhost:2375

build_image_candidate:
  <<: *build_image
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build $DOCKER_OPTS -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID .
  - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID

build_image_latest:
  <<: *build_image
  when: manual
  before_script:
  - apk add --no-cache git
  - git checkout $CI_BUILD_REF_NAME
  - git pull --tags
  - git describe --exact-match --tags HEAD
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build $DOCKER_OPTS -t $CI_REGISTRY_IMAGE:latest .
  - docker push $CI_REGISTRY_IMAGE:latest
